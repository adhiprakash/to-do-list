import 'package:flutter/material.dart';
import 'package:hive/hive.dart';
import 'package:hive_flutter/hive_flutter.dart';

void main() async {
  await Hive.initFlutter();
  await Hive.openBox('tasks');  // Opening a box for storing tasks
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'To-Do List App',
      theme: ThemeData(
        primarySwatch: Colors.blue,
        visualDensity: VisualDensity.adaptivePlatformDensity,
      ),
      home: TodoListPage(),
    );
  }
}

class TodoListPage extends StatefulWidget {
  @override
  _TodoListPageState createState() => _TodoListPageState();
}

class _TodoListPageState extends State<TodoListPage> {
  final TextEditingController _taskController = TextEditingController();

  void _addTask() {
    final task = _taskController.text;
    if (task.isNotEmpty) {
      var box = Hive.box('tasks');
      box.add({'task': task, 'isCompleted': false});
      _taskController.clear();
    }
  }

  void _toggleCompletion(int index) {
    var box = Hive.box('tasks');
    var task = box.getAt(index);
    task['isCompleted'] = !task['isCompleted'];
    box.putAt(index, task);
  }

  void _deleteTask(int index) {
    var box = Hive.box('tasks');
    box.deleteAt(index);
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('To-Do List'),
      ),
      body: ValueListenableBuilder(
        valueListenable: Hive.box('tasks').listenable(),
        builder: (context, Box box, _) {
          return ListView.builder(
            itemCount: box.length,
            itemBuilder: (context, index) {
              var task = box.getAt(index);
              return ListTile(
                title: Text(
                  task['task'],
                  style: TextStyle(
                    decoration: task['isCompleted']
                        ? TextDecoration.lineThrough
                        : TextDecoration.none,
                  ),
                ),
                trailing: IconButton(
                  icon: Icon(Icons.delete),
                  onPressed: () => _deleteTask(index),
                ),
                leading: Checkbox(
                  value: task['isCompleted'],
                  onChanged: (value) => _toggleCompletion(index),
                ),
              );
            },
          );
        },
      ),
      floatingActionButton: FloatingActionButton(
        onPressed: _addTask,
        child: Icon(Icons.add),
      ),
      bottomSheet: Padding(
        padding: const EdgeInsets.all(8.0),
        child: TextField(
          controller: _taskController,
          decoration: InputDecoration(
            hintText: 'Enter a task...',
            border: OutlineInputBorder(),
            suffixIcon: IconButton(
              icon: Icon(Icons.send),
              onPressed: _addTask,
            ),
          ),
        ),
      ),
    );
  }
}
